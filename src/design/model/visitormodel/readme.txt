访问者模式是对象的行为模式。访问者模式的目的是封装一些施加于某种数据结构元素之上的操作。一旦这些操作需要修改的话，接受这个操作的数据结构则可以保持不变。
静态分派(Static Dispatch)发生在编译时期，分派根据静态类型信息发生。静态分派对于我们来说并不陌生，方法重载就是静态分派。
动态分派(Dynamic Dispatch)发生在运行时期，动态分派动态地置换掉某个方法。
一个方法所属的对象叫做方法的接收者，方法的接收者与方法的参数统称做方法的宗量
包two
　访问者模式涉及到的角色如下：
　　●　　抽象访问者(Visitor)角色：声明了一个或者多个方法操作，形成所有的具体访问者角色必须实现的接口。
　　●　　具体访问者(ConcreteVisitor)角色：实现抽象访问者所声明的接口，也就是抽象访问者所声明的各个访问操作。
　　●　　抽象节点(Node)角色：声明一个接受操作，接受一个访问者对象作为一个参数。
　　●　　具体节点(ConcreteNode)角色：实现了抽象节点所规定的接受操作。
　　●　　结构对象(ObjectStructure)角色：有如下的责任，可以遍历结构中的所有元素；如果需要，提供一个高层次的接口让访问者对象可以访问每一个元素；如果需要，
可以设计成一个复合对象或者一个聚集，如List或Set。

包three（符合“单一职责原则”和“开闭原则”的访问者模式）
FADepartment表示财务部，HRDepartment表示人力资源部，它们充当具体访问者角色，其抽象父类Department充当抽象访问者角色；EmployeeList充当对象结构，
用于存储员工列表；FulltimeEmployee表示正式员工，ParttimeEmployee表示临时工，它们充当具体元素角色，其父接口Employee充当抽象元素角色。

